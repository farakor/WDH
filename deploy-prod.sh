#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è WDH –≤ production —Ä–µ–∂–∏–º–µ

set -e

echo "üöÄ WDH Production Deploy Script"
echo "================================"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker compose
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env.production
if [ ! -f ".env.production" ]; then
    log_warn ".env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    if [ -f ".env.production.example" ]; then
        log_info "–ö–æ–ø–∏—Ä—É—é .env.production.example -> .env.production"
        cp .env.production.example .env.production
        log_warn "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env.production –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 1
    else
        log_error ".env.production.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è production —Ñ–∞–π–ª–æ–≤..."
REQUIRED_FILES=(
    "docker-compose.prod.yml"
    "frontend/Dockerfile.prod"
    "frontend/nginx.conf"
    "backend/Dockerfile.prod"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        log_error "–§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
done

log_info "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã ‚úì"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log_info "–¢–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker compose -f docker-compose.prod.yml ps || true
echo ""

# –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
read -p "–ù–∞—á–∞—Ç—å —Å–±–æ—Ä–∫—É –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ? (y/n) " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    log_warn "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    exit 0
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose.prod.yml down || true
echo ""

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
log_info "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
docker compose -f docker-compose.prod.yml build --no-cache
echo ""

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_info "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose.prod.yml --env-file .env.production up -d
echo ""

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log_info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose -f docker-compose.prod.yml ps
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks
log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
if curl -f http://localhost:3000/api/health &> /dev/null; then
    log_info "‚úì Backend —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_warn "‚úó Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–º–æ–∂–µ—Ç –≤—Å–µ –µ—â–µ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
if curl -f http://localhost/health &> /dev/null || curl -f http://localhost:80/health &> /dev/null; then
    log_info "‚úì Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    log_warn "‚úó Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–º–æ–∂–µ—Ç –≤—Å–µ –µ—â–µ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è)"
fi

echo ""
log_info "================================"
log_info "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
log_info "================================"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo ""
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
echo "    docker compose -f docker-compose.prod.yml logs -f"
echo ""
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞:"
echo "    docker compose -f docker-compose.prod.yml ps"
echo ""
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:"
echo "    docker compose -f docker-compose.prod.yml down"
echo ""
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:"
echo "    docker compose -f docker-compose.prod.yml restart"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
echo "  Frontend: http://localhost"
echo "  Backend API: http://localhost:3000/api"
echo ""

